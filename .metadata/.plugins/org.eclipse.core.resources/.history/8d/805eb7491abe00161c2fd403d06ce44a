-- @path SML=/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore
-- @nsURI PN=http://org.pnml.tools/epnk/pnmlcoremodel

module SML2PN;
create OUT : PN from IN : SML;

rule StateSys2PN {
	from
		i1 : SML!StateSystem
	to 
		o0 : PN!PetriNetDoc(
			net <- o1
		),
		o1 : PN!PetriNet(
			id <- 'PN1' ,
			name <- o2,
			page <- pPage
						
		),
		o2 : PN!Name(
			text <- i1.name	
		),
		
		pPage : PN!Page(
			 id <- 'P1',
			 name <- pPageName,
			 
			 object <- i1.nodes
						
		     
		),
		
		pPageName : PN!Name(
			text <- 'MainPage'
		)
		
}

rule State2Place{
	
	from state: SML!State
	
	to  place : PN!Place(
		
		name <- pStateName,
		id <- state.name.toLower()
		
	),
	pStateName : PN!Name(
			text <- state.name
		)
	
}


rule Transition2Transition{
	
	from StateTransition : SML!Transition
	
	to PlaceTransition : PN!Transition(
		
		name <- pTransitionName,
		id <- StateTransition.name.toLower()

	),
	
	pTransitionName : PN!Name(
		
		text <- StateTransition.name
		
	)

}

rule Edge2Arc {
	
	from edge : SML!Edge
	
	to arc : PN!Arc(
		
		id <- edge.name,
		source <- pSourcePlace,
		target <- pTargetPlace

	),
	pEdgeName : PN!Name(
			text <- edge.name
		),
		
	pSourceNode : PN!Node(
		
	)
	
	
	
	
}


